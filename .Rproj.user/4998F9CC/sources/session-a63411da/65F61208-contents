---
title: "calibrate"
author: "Xiaoliang Zhou"
date: `r format(Sys.time(), "%d %B, %Y")`
output: html_document
---

```{r}
library(RaschKit)
install_packages_ls()
```

Open this .Rmd file via 'xxx.Rproj' in working directory.
Select function below for different cases. Functions would output instructions 
on where to find report and/or result files.

# Check data and codebook

## Data

Read data to be used for 'data' argument of Function calibrate.
Note that data should have covariates followed by responses.

```{r}
resp <- haven::read_sav('data/test.sav')
```

Check whether columns have responses other than valid ones like A,B,C,D....
If there is invalid one, put that into 'missCode2Conv' argument of Function 
calibrate to recode them. If data is recoded already, set missCode2Conv=NULL.

## Codebook

```{r}
# To be used as 'keys' for 'calibrate' (below)
keys <- readxl::read_xlsx(list.files(here::here('dataRaw'), 
        'codebook', # revise to unique string in file name
         full.names = TRUE)) |> 
  select(Item, Key, Max_score) 
```

## Update key after review

This may occur when you send 1st round of item analysis results to test developers
and they advise psychometricians to change key, use double key, or remove items.

```{r}
keys[25, 'Key'] <- 'A'
```

# Explore function

```{r}
calibrate(test='FPA', data=resp, pid='pid', n_cov=1, keys=keys)
```

Below are useful arguments of 'calibrate'. 

## Must set 

test: Test name, e.g., 'GAT'; any meaningful name; 'xxx' below.
pid: Candidate ID variable name in data.
n_cov: Number of covariates before responses.
Keys: Have Item, Key, Max_score.

## May ignore

data: Ignore if 'xxx.sav' (or xxx.xlsx) is in 'data' folder.

## Set if test developer advises so after review

delete: int Vector of item order, or char vector of item labels.
dbl_key: list(`5`=c(1,3), `29`=c(3,4)).

## Regressor

regr_vec_char: categorical vector of regressor names in data.

## Multi-dimensional modeling

n_dims: integer Vector of dimensions' item numbers in test.
dim_names: dimension names (e.g., c('Literacy', 'Numeracy')); any meaningful name.

## Polytomous items

Prepare dataframe keys as 'keys' argument of calibrate(). It has variables
  - Item: item labels.
  - Key: key for MC items. Use 1 for constructed responses (CR).
  - Max_score: Maximum score for MC (and CR items). 
  - Key2: 2nd key for polytomous items. Can ignore if no double key.

## Extra lines in CQ control file

section_extr: Vector of strings as CQ command, if needed to add to control file.

## Item flagging criteria

Can change values to satisfy project requirements.

easy, hard, iRst, fit_w, fit_u: For flagging items.
dFallThr, dRiseThr: For comments on CCC's.

## Explore more

Run '?calibrate' to know more details of arguments mentioned and more arguments.
