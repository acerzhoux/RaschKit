---
title: "GAT"
author: "Xiaoliang Zhou"
date: "2022-09-28"
output: html_document
---

```{r}
devtools::load_all()
install_packages_ls()
create_folders()
```

# clean data

```{r}
# data
files <- list.files(here::here('dataRaw'), full.names = TRUE, '')

cd <- readRDS(files[[3]]) 
cd %>% 
    write.csv(here::here('data', 'codebook_2022.csv'))

# AHU
cd_dm <- cd %>% filter(comp_type=='AHU') %>% 
    mutate(iNum = str_extract(qst_num, '\\d+') %>% 
               as.numeric()) %>% 
    arrange(iNum)
vars <- cd_dm$qst_num[26:75]


resp <- readRDS(files[[5]]) 
resp %>% 
    write.csv(here::here('data', 'data_2022.csv'))

resp %>% 
    pivot_wider(names_from = 'qst_num', values_from = 'response') %>% 
    filter(score==1) %>% 
    select(-score) %>% 
    write.csv(here::here('data', 'data_wide_2022.csv'))

a=resp %>% 
    filter(comp_type=='AHU') %>% 
    pivot_wider(names_from = 'qst_num', values_from = 'response') %>% 
    select(student_id, vars)

resp <- readxl::read_xlsx(files[[2]]) %>% 
    map_df(~toupper(.x))
lapply(resp[-1], table)

keys <- readxl::read_xlsx(files[[3]]) %>% 
    row_to_names(1) %>% 
    pull(`Correct Response`)
```

# Recode: DIF variables

```{r}
cd <- map(1:3, ~readxl::read_xlsx(here::here('dataRaw', 'GAT22codebook_Revised 9 September.xlsx'), .x))

df_cov <- readxl::read_xlsx(here::here('dataRaw', 'are018_student.xlsx')) %>% 
    mutate(enrol=str_sub(`Enrolment type`, 1, 5))
# lapply(df_cov[4:9], table)

DIF_cov <- df_cov %>% 
    mutate(
        VCEVCAL=case_when(enrol=='VCE'~1,
                          enrol=='VCAL-'~2,
                          enrol=='SVCAL'~2,
                          enrol=='CVCAL'~2),
        gender=case_when(`Student gender`=='M'~1,
                          `Student gender`=='F'~2),
        LBOTE=case_when(`Student LBOTE (EAL approved) status`=='A'~2,
                        TRUE~1),
        ATSI=case_when(`Student ATSI status`=='N'~1,
                       `Student ATSI status`=='K'~2,
                       `Student ATSI status`=='T'~2,
                       `Student ATSI status`=='B'~2),
        yearlevel=case_when(`Student year level`==11~1,
                          `Student year level`==12~2),
        year=case_when(`Student year level`<12~1,
                       `Student year level`==12~2)        
    ) %>% 
    select(2, 10:15)
# lapply(DIF_cov[-1], table)
```

# ##### MST, AHU

```{r}
resp_B <- readxl::read_xlsx(here::here('dataRaw', 'are018_GAT2_14102022.xlsx')) 

resp_B <- resp_B %>% 
    filter(`GAT Reliable flag`=='Y') %>% 
    select(contains('id'), contains('2-')) %>% 
    mutate(`Student id`=as.character(`Student id`)) %>% 
    dplyr::rename(pid=`Student id`)
# lapply(resp_B[-1], table)
# length(resp_B$pid)==length(unique(resp_B$pid))

# miss code
# resp_B[resp_B=='0'] <- '9'
resp_B_code_miss <- miss_recode(df=resp_B, code_allMiss='Z', miss_code='0',
                                begin=2, end=51)
# lapply(resp_B_code_miss[-1], table)
```

# MST

```{r}
cd_dm <- cd[[3]] %>% 
    mutate(domain=str_sub(`Item Id`, 1, 1)) %>% 
    filter(domain=='M')
labels <- cd_dm %>% 
    pull(`Item Id`)
keys <- cd_dm  %>% 
    select(
        Item=`Item Id`,
        Key=Keys
    ) |> 
    mutate(Max_score=1)
item_order <- cd_dm %>% 
    pull(item)

calibrate(test='MST', data=resp_B_code_miss %>%
              select(1, item_order+1), pid='pid', n_cov=1, keys=keys,
          labels=labels, quick=FALSE, miss_code=NA,
          recode=FALSE)
```

# missing

```{r}
a=resp_B %>% 
    filter(`GAT Reliable flag`=='Y' | is.na(`GAT absent flag`)) %>% 
    select(contains('id'), contains('2-')) %>% 
    mutate(`Student id`=as.character(`Student id`)) %>% 
    dplyr::rename(pid=`Student id`)
# c = a %>% 
#     filter(`GAT Reliable flag`=='N')

B_more <- miss_recode(df=a, code_allMiss='Z', miss_code='0',
                                begin=2, end=51)

b=resp_B %>% 
    filter(`GAT Reliable flag`=='Y')  %>% 
    select(contains('id'), contains('2-')) %>% 
    mutate(`Student id`=as.character(`Student id`)) %>% 
    dplyr::rename(pid=`Student id`)

B <- miss_recode(df=b, code_allMiss='Z', miss_code='0',
                                begin=2, end=51)
```

```{r}
row_MST <- complete_dm(dat=B_more %>% select(1, item_order+1), test='MST')
row_MST_reliable <- complete_dm(dat=B %>% select(1, item_order+1), test='MST')
```

# DIF

```{r}
data <- DIF_cov %>% 
    right_join(resp_B_code_miss %>% 
              select(1, item_order+1) %>% 
    mutate(pid=as.numeric(pid)), c('Student id'='pid')) |> 
    sample_n(3000)
vars_DIF <- names(data)[2:6]
var_D_ls <- list(c('VCE','VCAL'), c('Male','Female'), c('EAL_N','EAL_Y'), c('KBT_N','KBT_Y'), c('Y11','Y12') )

for (i in 1:5){
    DIFVar <- vars_DIF[[i]]
    var_D <- var_D_ls[[i]]
    DIF_dim_one(method='chi_square', test='MST', pid='Student id', n_cov=7, 
            DIFVar=DIFVar, data=data, keys=keys, vars=var_D)   
}
```

# equiv tbl

```{r}
calibrate(test='MST', pid='pid', n_cov=1, keys=keys, labels=labels, 
          anchor=TRUE, recode=F, miss_code=c('R','M',NA))
```

# AHU

```{r}
cd_dm <- cd[[3]] %>% 
    mutate(domain=str_sub(`Item Id`, 1, 1)) %>% 
    filter(domain=='R')
labels <- cd_dm %>% 
    pull(`Item Id`)
keys <- cd_dm  %>% 
    pull(Keys)
item_order <- cd_dm %>% 
    pull(item)

calibrate(test='AHU', data=resp_B_code_miss %>%
              select(1, item_order+1), pid='pid', n_cov=1, keys=keys,
          labels=labels, quick=FALSE, miss_code=NA,
          recode=FALSE)
```

# missing

```{r}
# AHU
row_AHU <- complete_dm(dat=B_more %>% select(1, item_order+1), test='AHU')
row_AHU_reliable <- complete_dm(dat=B %>% select(1, item_order+1), test='AHU')
```

# DIF

```{r}
data <- DIF_cov %>% 
    right_join(resp_B_code_miss %>% 
              select(1, item_order+1) %>% 
    mutate(pid=as.numeric(pid)), c('Student id'='pid'))
```


```{r}
i <- 5
# for (i in 1:5){
    DIFVar <- vars_DIF[[i]]
    var_D <- var_D_ls[[i]]
    DIF_dim_one(method='chi_square', test='AHU', pid='Student id', n_cov=6, 
            DIFVar=DIFVar, data=data, keys=keys, vars=var_D, 
            labels=labels, quick=FALSE, miss_code=c('M', 'R'))   
# }
```

# equiv tbl

```{r}
calibrate(test='AHU', pid='pid', n_cov=1, keys=keys, labels=labels, 
          anchor=TRUE, recode=F, miss_code=c('R','M',NA))
```

# ###### numeracy, reading (Section A)

# ### N

```{r}
resp_A_Num <- readxl::read_xlsx(here::here('dataRaw', 'are018_GAT1_DNUM.xlsx'))

a <- resp_A_Num %>% 
    filter(!is.na(`Total domain score`)) %>% 
    select(pid=contains('id'), contains('000')) %>% 
    mutate(pid=as.character(pid)) 

# c <- resp_A_Num %>% 
#     filter(`GAT Reliable flag`=='N' & is.na(`GAT absent flag`)) 

N_more <- miss_recode(df=a, code_allMiss='Z', miss_code='0',
                                begin=2, end=51)

b <- resp_B %>% 
    filter(`GAT Reliable flag`=='Y')  %>% 
    select(pid=contains('id'), contains('000')) %>% 
    mutate(pid=as.character(pid)) 

# N <- miss_recode(df=b, code_allMiss='Z', miss_code='0',
#                                 begin=2, end=51)

N <- readxl::read_xlsx(here::here('data', 'Numeracy.xlsx')) %>% 
    dplyr::rename(pid=`Student id`)
```

```{r}
# codebook
cd_dm <- cd[[1]] 
labels <- cd_dm %>% 
    pull(`Item Id`)
keys <- cd_dm  %>% 
    pull(Keys)

calibrate(test='Numeracy', data=N, pid="Student id", n_cov=1, keys=keys,
          labels=labels, miss_code=NA, recode=FALSE, quick=TRUE)

# DIF
data <- DIF_cov %>% 
    right_join(N) 

# i <- 5
for (i in 1:5){
    DIFVar <- vars_DIF[[i]]
    var_D <- var_D_ls[[i]]
    DIF_dim_one(method='chi_square', test='Numeracy', pid='Student id', n_cov=6, 
            DIFVar=DIFVar, data=data, keys=keys, vars=var_D, 
            labels=labels, quick=TRUE, miss_code=c('M', 'R'))   
}
```

# missing

```{r}
# N
row_N <- complete_dm(dat=N_more, test='N')
row_N_reliable <- complete_dm(dat=N, test='N', isym='N')
```

# equiv tbl

```{r}
calibrate(test='Numeracy', pid='Student id', n_cov=1, keys=keys, labels=labels, 
          anchor=TRUE, recode=F, miss_code=c('R','M',NA))
```

# facility tbl: N

```{r}
# Columns 1-3
a <- DIF_cov %>% 
    right_join(N)
# lapply(N_more[-1], table)
a[a=='R'] <- NA
a1 <- map2_dbl(1:50, keys, ~round(mean({a %>% filter(VCEVCAL==1)}[6+.x]==.y, na.rm=TRUE)*100, 2))
a2 <- map2_dbl(1:50, keys, ~round(mean({a %>% filter(VCEVCAL==2)}[6+.x]==.y, na.rm=TRUE)*100, 2))
a3 <- map2_dbl(1:50, keys, ~round(mean(a[6+.x]==.y, na.rm=TRUE)*100, 2))

# Columns 4-54
b <- resp_A_Num[2:3] %>% 
    right_join(a) %>% 
    dplyr::rename(tot=`Total domain score`)
c_ls <- list()
for (i in 0:50){
    c_ls[[i+1]] <- map2_dbl(1:50, keys, ~round(mean({b %>% filter(tot==i)}[7+.x]==.y, na.rm=TRUE)*100, 2))
}
c <- map(c_ls, ~.x %>% 
        as_tibble()) %>% 
    reduce(bind_cols) %>% 
    `colnames<-`(str_c('Facility Score ', 0:50))

# put together and sort
diffs <- readxl::read_xlsx(here::here('results', 'itn_Numeracy.xlsx')) %>% 
    select(qid, delta)

d <- tibble(OIB=1:50, 
            `Item ID`=labels,
            `Facility VCE`=a1,
            `Facility VCAL`=a2,
            `Facility all`=a3) %>% 
    bind_cols(c) %>% 
    left_join(diffs, c('Item ID'='qid')) %>% 
    arrange(delta) %>% 
    select(-delta)

# save
d %>% 
    writexl::write_xlsx(here::here('results', 'facility by subgroup_N.xlsx'))
```

# ### R

```{r}
resp_A_Read <- readxl::read_xlsx(here::here('dataRaw', 'are018_GAT1_DREA.xlsx')) 

a <- resp_A_Read %>% 
    filter(!is.na(`Total domain score`)) %>% 
    select(pid=contains('id'), contains('00')) %>% 
    mutate(pid=as.character(pid)) 

R_more <- miss_recode(df=a, code_allMiss='Z', miss_code='0',
                                begin=2, end=51)

b <- resp_A_Read %>% 
    filter(`GAT Reliable flag`=='Y')  %>% 
    select(pid=contains('id'), contains('00')) %>% 
    mutate(pid=as.character(pid)) 

R <- miss_recode(df=b, code_allMiss='Z', miss_code='0',
                                begin=2, end=51)
```

```{r}
# codebook
cd_dm <- cd[[2]] 
labels <- cd_dm %>% 
    pull(`Item Id`)
keys <- cd_dm  %>% 
    pull(Keys)

calibrate(test='Reading', data=R, pid="Student id", n_cov=1, keys=keys,
          labels=labels, quick=FALSE, miss_code=NA,
          recode=FALSE)
```

# missing

```{r}
# N
row_R <- complete_dm(dat=R_more, test='R')
row_R_reliable <- complete_dm(dat=R, test='R')
```

# facility tbl: R

```{r}
# Columns 1-3
a <- DIF_cov %>% 
    right_join(R)

a[a=='R'] <- NA
a1 <- map2_dbl(1:50, keys, ~round(mean({a %>% filter(VCEVCAL==1)}[6+.x]==.y, na.rm=TRUE)*100, 2))
a2 <- map2_dbl(1:50, keys, ~round(mean({a %>% filter(VCEVCAL==2)}[6+.x]==.y, na.rm=TRUE)*100, 2))
a3 <- map2_dbl(1:50, keys, ~round(mean(a[6+.x]==.y, na.rm=TRUE)*100, 2))

# Columns 4-54
b <- resp_A_Read[2:3] %>% 
    right_join(a) %>% 
    dplyr::rename(tot=`Total domain score`)
c_ls <- list()
for (i in 0:50){
    c_ls[[i+1]] <- map2_dbl(1:50, keys, ~round(mean({b %>% filter(tot==i)}[7+.x]==.y, na.rm=TRUE)*100, 2))
}
c <- map(c_ls, ~.x %>% 
        as_tibble()) %>% 
    reduce(bind_cols) %>% 
    `colnames<-`(str_c('Facility Score ', 0:50))

# put together and sort
diffs <- readxl::read_xlsx(here::here('results', 'itn_Reading.xlsx')) %>% 
    select(qid, delta)

d <- tibble(OIB=1:50, 
            `Item ID`=labels,
            `Facility VCE`=a1,
            `Facility VCAL`=a2,
            `Facility all`=a3) %>% 
    bind_cols(c) %>% 
    left_join(diffs, c('Item ID'='qid')) %>% 
    arrange(delta) %>% 
    select(-delta)

# save
d %>% 
    writexl::write_xlsx(here::here('results', 'facility by subgroup_R.xlsx'))
```

# DIF

```{r}
data <- DIF_cov %>% 
    right_join(resp_A_code_miss %>% 
              select(1, item_order+1) %>% 
    mutate(`Student id`=as.numeric(`Student id`)), by='Student id')
```

```{r}
i <- 5
# for (i in 1:5){
    DIFVar <- vars_DIF[[i]]
    var_D <- var_D_ls[[i]]
    DIF_dim_one(method='chi_square', test='Reading', pid='Student id', n_cov=6, 
            DIFVar=DIFVar, data=data, keys=keys, vars=var_D, 
            labels=labels, quick=FALSE, miss_code=c('M', 'R'))   
# }
```

# equiv tbl

```{r}
calibrate(test='Reading', pid='Student id', n_cov=1, keys=keys, labels=labels, 
          anchor=TRUE, recode=F, miss_code=c('R','M',NA))
```

# missing: Nathan (M,R)

```{r}
map_dbl(N[-1], ~round(mean(.x %in% c('R','M'))*100, 2)) %>% 
    tibble(Item=names(.),
           Perct_miss=.) %>% 
    write_xlsx(here::here('results', 'N_perc_miss.xlsx'))

map_dbl(R[-1], ~round(mean(.x %in% c('R','M'))*100, 2)) %>% 
    tibble(Item=names(.),
           Perct_miss=.) %>% 
    write_xlsx(here::here('results', 'R_perc_miss.xlsx'))

```

# ### writing

```{r}
wA <- readxl::read_xlsx(here::here('dataRaw', 'are018_GAT1_DWRI_12102022.xlsx')) |> 
    slice_sample(n = 5000)

a <- freq_resps_cat(wA[7:13], T)


wA_more <- wA %>%  
    filter(!is.na(`Total domain score`))%>% 
    select(pid=contains('id'), contains('-'), contains('Total')) %>% 
    mutate(pid=as.character(pid)) 

wAll <- wA %>% 
    filter(`GAT Reliable flag`=='Y',
           `1...14`=='Y', `2...15`=='Y', 
           `3...16`=='Y', `4...17`=='Y', 
           `5...18`=='Y', `6...19`=='Y', 
           `7...20`=='Y') %>% 
    select(contains('id'), contains('-'), contains('Total'))
# lapply(wAll[-1], table)

labels <- c('Audience','Ideas','Structure','Grammar','Punctuation','Vocabulary','Spelling')

# calibrate(test='Writing', data=wAll, pid="Student id", n_cov=1, labels=labels,
#           quick=FALSE, miss_code=NA, recode=FALSE, poly_key = TRUE)
```

# missing

```{r}
# WA
row_WA <- DIF_cov %>% 
    select(pid='Student id', VCEVCAL) %>% 
    mutate(pid=as.character(pid)) %>% 
    right_join(
        wA_more %>%
            select(pid, tot=`Total domain score`) 
    ) %>% 
    filter(!is.na(VCEVCAL)) %>%
    group_by(VCEVCAL) %>%
    dplyr::summarise(rate_comp=round(mean(tot>0)*100, 1)) %>%
    pivot_wider(names_from = 'VCEVCAL',
                values_from = rate_comp) %>%
    cbind(test='WA') %>%
    select(test, rate_comp_1=`1`, rate_comp_2=`2`)

# COM
row_COM <- DIF_cov %>% 
    select(pid='Student id', VCEVCAL) %>% 
    # mutate(pid=as.character(pid)) %>% 
    right_join(
        resp_B %>% 
            filter(!is.na(DCOM)) %>%
            select(pid=`Student id`, tot=DCOM) 
    ) %>% 
    filter(!is.na(VCEVCAL)) %>%
    group_by(VCEVCAL) %>%
    dplyr::summarise(rate_comp=round(mean(tot>0)*100, 1)) %>%
    pivot_wider(names_from = 'VCEVCAL',
                values_from = rate_comp) %>%
    cbind(test='COM') %>%
    select(test, rate_comp_1=`1`, rate_comp_2=`2`)
```

# put together (Slide 29, 30)

```{r}
complete_more <- bind_rows(
    row_N, row_R, row_WA, row_MST, row_AHU, row_COM
)
complete_reliable <- bind_rows(
    row_N_reliable, row_R_reliable, row_MST_reliable, row_AHU_reliable
)

write_xlsx(list(have_Data=complete_more,
                reliable=complete_reliable),
           here::here('results', 'QA_Slides29_30.xlsx'))
```

# facility tbl: WA

```{r}
# Columns 1-3
a <- DIF_cov %>% 
    right_join(wAll) %>% 
    dplyr::rename(tot=`Total domain score`)
# lapply(N_more[-1], table)
a[a=='R'] <- NA

tibble(` `=str_c('Total Score = ',0:72),
       map(0:72, ~round(colMeans({a %>% filter(tot==.x)}[8:14]), 2)) %>% 
            reduce(bind_rows) %>% 
            `colnames<-`(str_c('Criterion ',1:7,' Average Score')),
        map(0:72, ~round(colMeans({a %>% filter(VCEVCAL==1, tot==.x)}[8:14]), 2)) %>% 
            reduce(bind_rows) %>% 
            `colnames<-`(str_c('Criterion ',1:7,' Average Score_VCE')),
        map(0:72, ~round(colMeans({a %>% filter(VCEVCAL==2, tot==.x)}[8:14]), 2)) %>% 
            reduce(bind_rows) %>% 
            `colnames<-`(str_c('Criterion ',1:7,' Average Score_VCAL')),
        map(0:72, ~round(colMeans({a %>% filter(year==2, tot==.x)}[8:14]), 2)) %>% 
            reduce(bind_rows) %>% 
            `colnames<-`(str_c('Criterion ',1:7,' Average Score_Y12')),
        map(0:72, ~round(colMeans({a %>% filter(year==1, tot==.x)}[8:14]), 2)) %>% 
            reduce(bind_rows) %>% 
            `colnames<-`(str_c('Criterion ',1:7,' Average Score_Y<12'))) %>% 
    writexl::write_xlsx(here::here('results', 'facility by subgroup_WA.xlsx'))

read2one(tests=c('N','R','WA'), result_type='facility by subgroup')
```

# DIF

```{r}
data <- DIF_cov %>% 
    right_join(wAll, by='Student id')
```

```{r}
# i <- 5
# # for (i in 1:5){
#     DIFVar <- vars_DIF[[i]]
#     var_D <- var_D_ls[[i]]
#     DIF_dim_one(method='chi_square', test='Writing', pid='Student id', n_cov=6, 
#             DIFVar=DIFVar, data=data, vars=var_D, 
#             labels=labels, quick=FALSE, miss_code=NA, poly_key = TRUE)   
# # }
```

# equiv tbl

```{r}
calibrate(test='Writing', pid='Student id', n_cov=1, labels=labels, 
          anchor=TRUE, recode=F, miss_code=c('R','M',NA), poly_key = TRUE)
```

# #### equate: DIF analysi of trial vs. this cycle

```{r}
df <- readxl::read_xlsx(here::here('equating', 'trial_GAT.xlsx'), 'N_GAT') %>% 
    inner_join(readxl::read_xlsx(here::here('equating', 'trial_GAT.xlsx'), 'N_trial'))
Equate(df=df, test='Numeracy', vars=c('GAT', 'Trial'), DIF_cut=0.3, DIF_adj_cut=3.5,
       iterative=F)

df <- readxl::read_xlsx(here::here('equating', 'trial_GAT.xlsx'), 'R_GAT') %>% 
    inner_join(readxl::read_xlsx(here::here('equating', 'trial_GAT.xlsx'), 'R_trial'))
Equate(df=df, test='Reading', vars=c('GAT', 'Trial'), DIF_cut=0.3, DIF_adj_cut=3.5,
       iterative=T)

df <- readxl::read_xlsx(here::here('equating', 'trial_GAT.xlsx'), 'W_GAT') %>% 
    inner_join(readxl::read_xlsx(here::here('equating', 'trial_GAT.xlsx'), 'W_trial'))
Equate(df=df, test='Writing', vars=c('GAT', 'Trial'), DIF_cut=0.3, DIF_adj_cut=50)

```

# DIF 

```{r}
dif_vars <- c('ATSI', 'gender', 'LBOTE', 'VCEVCAL', 'yearlevel')
tests <- c('AHU', 'MST', 'Numeracy', 'Reading', 'Writing')
vars_ls <- list(c('ATSI_No','ATSI_Yes'), c('Male','Female'), 
                c('LBOTE_No','LBOTE_Yes'), c('VCE','VCAL'), 
                c('Y11','Y12'), )


DIFVar <- dif_vars[[i]]
test <- tests[[i]]
vars <- vars_ls[[i]]
DIF_dich_iterative_its_shw(DIFVar=DIFVar, test=test, 
                           vars=vars)
```

# DIF

```{r}
var_ls <- list(VCEVCAL=c('VCE','VCAL'), gender=c('Male','Female'), 
               LBOTE=c('EAL_N','EAL_Y'), ATSI=c('KBT_N','KBT_Y'), 
               yearlevel=c('Y11','Y12') )
tests <- c('AHU', 'MST', 'Numeracy', 'Reading')

for (tst in tests){
    DIF_domain(test=tst, var_ls=var_ls, p_cut=0.05, DIF_cut=0.5, 
           DIF_adj_cut=15, chi_cut=12, 
           facil_cut=10, output_ready=TRUE, iterative=F)
}

# writing item deltas
DIF_domain(test='Writing', data=data, var_ls=var_ls, 
           n_cov=6, pid='Student id', labels=labels, keys=NULL, 
           p_cut=0.05, DIF_cut=0.5, 
           DIF_adj_cut=15, chi_cut=12, 
           facil_cut=10, output_ready=T, iterative=F,
           poly_key = TRUE)

DIF_domain(test='Writing', var_ls=var_ls, p_cut=0.05, DIF_cut=0.5, 
       DIF_adj_cut=50, chi_cut=12, keys=NULL, poly_key=TRUE,
       facil_cut=10, output_ready=TRUE, iterative=F)


# writing steps
DIF_domain(test='Writing', data=data, var_ls=var_ls[3], 
           n_cov=7, pid='Student id', keys=NULL, 
           p_cut=0.05, DIF_cut=0.5, 
           DIF_adj_cut=15, 
           output_ready=F, iterative=F,
           step=T)

# DIF_domain(test='Writing', var_ls=var_ls, p_cut=0.05, DIF_cut=0.5, 
#        DIF_adj_cut=15, chi_cut=12, 
#        facil_cut=10, output_ready=TRUE, iterative=F,
#        poly_key = TRUE, step=T)
```

```{r}
dfLst=list(data[1:14]); difVarsLst=list(gender=c('F', 'M')); keysLst=list(keys); 

DIFVar='gender'; quick=T
tests=test='Writing';  
n_cov=7; pid='Student id'; test3term='Writing'

p_cut=0.05; DIF_cut=0.5; DIF_adj_cut=4
desig_effect=1; step=FALSE; output_ready=FALSE;
iterative=TRUE

a <- freq_resps_cat(data[8:14], T)
    
keys <- tibble(
  Item=paste0('Q', 1:7),
  Key=1,
  Max_score=6
)

DIF_domain(tests='Writing', dfLst=list(data[1:14]), difVarsLst=list(gender=c('F', 'M')), 
           n_cov=7, pid='Student id', keysLst=list(keys), test3term='Writing')





```

# #### Equivalence tables

```{r}
tests <- c('AHU', 'MST', 'Numeracy', 'Reading', 'Writing')

a <- read_fwf(here::here('output', 'Writing.anc'), 
          fwf_cols(item=c(1,5),
              delta=c(6,20)),
             skip=0,
             n_max=36)
a <- a %>% 
    bind_rows(tibble(item=36, delta=3.25723)) 
a1 <- a[1:7,] 
b <- a1 %>% 
    mutate(delta=delta-mean(delta)) %>% 
    bind_rows(a[-c(1:7),] )
b %>% 
    write_xlsx(here::here('results', 'writing_anc_adj.xlsx'))

a %>% 
    write_xlsx(here::here('results', 'writing_anc_adj_output.xlsx'))
```


```{r}
calibrate(test=test, pid='pid', n_cov=1, keys=keys, labels=labels, 
          anchor=TRUE, recode=F, miss_code=c('R','M',NA))

```

```{r}
RANZCOG <- readxl::read_xlsx('dataRaw/RANZCOG.xlsx') |> 
  filter(Educator %in% 1:3)

keys <- tibble(
  Item=paste0('Q', 1:60),
  Key=1,
  Max_score=1
)

DIF_VarTests(tests='RANZCOG', dfLst=list(RANZCOG), difVarsLst=list(Educator=NULL), 
           n_cov=2, pid='pid', keysLst=list(keys), output_ready = TRUE)





```
