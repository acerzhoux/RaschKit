#' read2one
#'
#' This function reads from 'folder' files associated with 'tests'
#' and puts them into one file.
#'
#' @param folder Folder where to-be-read files are located. Must be one of
#' c('results', 'DIF', 'equating').
#' @param tests Vector of test names after '_'.
#' @param prefix Common prefix in file names before first '_'. Default is NULL.
#' @param file_name Name given to new file, each sheet of which is one test's result.
#' Default is NULL.
#' @param vars Vector of length 2 such as c('girls','boys'). Default is NULL.
#' Should be specified when to read multiple DIF analysis (binary DIF variable)
#' Excels and plots from 'DIF' folder.
#' Its order corresponds to the alphabetic/numeric order of DIF variables'
#' two categories in data.
#' @examples
#' # Not run
#' # read2one(folder='results', tests=c('bang_35', 'math_35'), prefix='itn')
#' @export

read2one <- function (folder = c('results', 'DIF', 'equating'), tests, prefix=NULL,
            file_name = NULL, vars=NULL) {
  # Excel names to read files from
  files <- file.path(folder, str_c(prefix, '_', tests, '.xlsx'))

  # sheet name to read from
  sheetNm <- ifelse(folder %in% c('DIF', 'equating'), 'final', 1)
  ex_ls <- map(files, ~readxl::read_xlsx(.x, sheetNm))

  # Excel name to save files into one
  if (!is.null(file_name)) {
    file <- ifelse(
      is.null(prefix),
      file.path(folder, str_c(file_name, '.xlsx')),
      file.path(folder, str_c(prefix, '_', file_name, '.xlsx'))
    )
  } else {
    file <- file.path(folder, str_c(prefix, ".xlsx"))
  }

  # save results: equating, DIF
  if (sheetNm == 'final'){

    # combine pdf's
    if (folder == 'DIF') {
      in_dif <- file.path(folder, str_c(prefix, '_', tests, '.pdf'))
      out_dif <- file.path(folder, str_c(prefix, '.pdf'))
      qpdf::pdf_combine(input = in_dif, output = out_dif)

      in_facil <- file.path(folder, str_c(prefix, '_', tests, '_Facility.pdf'))
      out_facil <- file.path(folder, str_c(prefix, '_Facility.pdf'))
      qpdf::pdf_combine(input = in_facil, output = out_facil)
    }

    writeLines(c(
      paste0('\n\nFiles and plots combined to:'),
      paste0('\tDIF flags:\t', file),
      # paste0('\tDIF plots:\t', out_dif),
      if (folder == 'DIF') paste0('\tFacility plots:\t', out_facil)))
  }

  # #############################################
  # ################ itn files ##################
  # #############################################

  if (sheetNm == 1){
    names(ex_ls) <- tests

    if (prefix=='itn'){
      # add hyperlink, color, format #######
      add_format()[['itn']](ex_ls, file, folder, prefix)

    } else {
      move_into_folder(folder, prefix)
      ex_ls |>
        writexl::write_xlsx(file)
    }

    cat('\nFiles combined to:\n\t', file)
  }

}
