labs(title = paste0("Category Characteristic Curves\n", "Item: ", i, " (",
i_df$iLab,")"),
subtitle = paste0("Weighted MNSQ = ", round(i_df$WeightedMNSQ,2)),
x = "Latent Trait (logit)", y = "Probability") +
scale_colour_brewer(type="qual", palette = 2) +
ggthemes::theme_tufte()
if (length(opt_sparse) > 0){
p + geom_text(data = annotations,
aes(x=xpos,y=ypos, hjust=hjustvar,
vjust=vjustvar, label=annotateText))
} else {
p
}
i_df <- iStats %>% filter(iNum == i)
o_df <- dfObs_opt %>% filter(iNum == i)
# detect sparse options
opt_sparse <- o_df %>%
filter(!(Option %in% c('M', 'R'))) %>%
group_by(Option) %>%
summarise(N=sum(Count)) %>%
filter(N < 100) %>%
pull(Option)
if (length(opt_sparse) > 0){
opt_text <- str_c('Fewer than 25 candidates selected ',
paste(opt_sparse, collapse=', '), '.')
annt <- data.frame(xpos = -Inf, ypos = Inf, txt = opt_text,
hjustvar = 1, vjustvar = 1)
}
xMin <- c(o_df$Ability) %>% min()  %>% floor() -.25
m_df <- tibble(pLoc = seq(xMin, 3, .001)) %>%
mutate(pSuccess = exp(pLoc - i_df$iLogit)/(1+exp(pLoc - i_df$iLogit)),
lineLab = "Model\nProbability")
p <- ggplot() +
geom_point(data = o_df,
mapping = aes(x = Ability, y = prop, size = Count,
colour = Option), alpha = .8) +
geom_line(data = o_df,
mapping = aes(x = Ability, y = prop, colour = Option),
size = 1, alpha = .5) +
geom_line(data = m_df,
mapping = aes(x = pLoc, y = pSuccess,
colour = lineLab), size = 1.5, alpha = .5) +
scale_shape_discrete(name = "Ability\nGroup") +
labs(title = paste0("Category Characteristic Curves\n", "Item: ", i, " (",
i_df$iLab,")"),
subtitle = paste0("Weighted MNSQ = ", round(i_df$WeightedMNSQ,2)),
x = "Latent Trait (logit)", y = "Probability") +
scale_colour_brewer(type="qual", palette = 2) +
ggthemes::theme_tufte()
if (length(opt_sparse) > 0){
p + geom_text(data = annt,
aes(x=xpos,y=ypos, hjust=hjustvar,
vjust=vjustvar, label=txt))
} else {
p
}
p
p + geom_text(data = annt,
aes(x=xpos,y=ypos, hjust=hjustvar,
vjust=vjustvar, label=txt))
geom_text(data = annt,
aes(x=xpos,y=ypos, hjust=hjustvar,
vjust=vjustvar, label=txt))
annt
if (length(opt_sparse) > 0){
opt_text <- str_c('Fewer than 25 candidates selected ',
paste(opt_sparse, collapse=', '), '.')
annt <- data.frame(xpos = -Inf, ypos = Inf, txt = opt_text,
hjustvar = 0, vjustvar = 0)
}
xMin <- c(o_df$Ability) %>% min()  %>% floor() -.25
m_df <- tibble(pLoc = seq(xMin, 3, .001)) %>%
mutate(pSuccess = exp(pLoc - i_df$iLogit)/(1+exp(pLoc - i_df$iLogit)),
lineLab = "Model\nProbability")
p <- ggplot() +
geom_point(data = o_df,
mapping = aes(x = Ability, y = prop, size = Count,
colour = Option), alpha = .8) +
geom_line(data = o_df,
mapping = aes(x = Ability, y = prop, colour = Option),
size = 1, alpha = .5) +
geom_line(data = m_df,
mapping = aes(x = pLoc, y = pSuccess,
colour = lineLab), size = 1.5, alpha = .5) +
scale_shape_discrete(name = "Ability\nGroup") +
labs(title = paste0("Category Characteristic Curves\n", "Item: ", i, " (",
i_df$iLab,")"),
subtitle = paste0("Weighted MNSQ = ", round(i_df$WeightedMNSQ,2)),
x = "Latent Trait (logit)", y = "Probability") +
scale_colour_brewer(type="qual", palette = 2) +
ggthemes::theme_tufte()
if (length(opt_sparse) > 0){
p + geom_text(data = annt,
aes(x=xpos,y=ypos, hjust=hjustvar,
vjust=vjustvar, label=txt))
} else {
p
}
if (length(opt_sparse) > 0){
opt_text <- str_c('Fewer than 25 candidates selected ',
paste(opt_sparse, collapse=', '), '.')
annt <- data.frame(xpos = -Inf, ypos = Inf, txt = opt_text,
hjustvar = 0, vjustvar = -0.2)
}
xMin <- c(o_df$Ability) %>% min()  %>% floor() -.25
m_df <- tibble(pLoc = seq(xMin, 3, .001)) %>%
mutate(pSuccess = exp(pLoc - i_df$iLogit)/(1+exp(pLoc - i_df$iLogit)),
lineLab = "Model\nProbability")
p <- ggplot() +
geom_point(data = o_df,
mapping = aes(x = Ability, y = prop, size = Count,
colour = Option), alpha = .8) +
geom_line(data = o_df,
mapping = aes(x = Ability, y = prop, colour = Option),
size = 1, alpha = .5) +
geom_line(data = m_df,
mapping = aes(x = pLoc, y = pSuccess,
colour = lineLab), size = 1.5, alpha = .5) +
scale_shape_discrete(name = "Ability\nGroup") +
labs(title = paste0("Category Characteristic Curves\n", "Item: ", i, " (",
i_df$iLab,")"),
subtitle = paste0("Weighted MNSQ = ", round(i_df$WeightedMNSQ,2)),
x = "Latent Trait (logit)", y = "Probability") +
scale_colour_brewer(type="qual", palette = 2) +
ggthemes::theme_tufte()
if (length(opt_sparse) > 0){
p + geom_text(data = annt,
aes(x=xpos,y=ypos, hjust=hjustvar,
vjust=vjustvar, label=txt))
} else {
p
}
if (length(opt_sparse) > 0){
opt_text <- str_c('Fewer than 25 candidates selected ',
paste(opt_sparse, collapse=', '), '.')
annt <- data.frame(xpos = -Inf, ypos = Inf, txt = opt_text,
hjustvar = 0, vjustvar = 0.2)
}
xMin <- c(o_df$Ability) %>% min()  %>% floor() -.25
m_df <- tibble(pLoc = seq(xMin, 3, .001)) %>%
mutate(pSuccess = exp(pLoc - i_df$iLogit)/(1+exp(pLoc - i_df$iLogit)),
lineLab = "Model\nProbability")
p <- ggplot() +
geom_point(data = o_df,
mapping = aes(x = Ability, y = prop, size = Count,
colour = Option), alpha = .8) +
geom_line(data = o_df,
mapping = aes(x = Ability, y = prop, colour = Option),
size = 1, alpha = .5) +
geom_line(data = m_df,
mapping = aes(x = pLoc, y = pSuccess,
colour = lineLab), size = 1.5, alpha = .5) +
scale_shape_discrete(name = "Ability\nGroup") +
labs(title = paste0("Category Characteristic Curves\n", "Item: ", i, " (",
i_df$iLab,")"),
subtitle = paste0("Weighted MNSQ = ", round(i_df$WeightedMNSQ,2)),
x = "Latent Trait (logit)", y = "Probability") +
scale_colour_brewer(type="qual", palette = 2) +
ggthemes::theme_tufte()
if (length(opt_sparse) > 0){
p + geom_text(data = annt,
aes(x=xpos,y=ypos, hjust=hjustvar,
vjust=vjustvar, label=txt))
} else {
p
}
if (length(opt_sparse) > 0){
opt_text <- str_c('Fewer than 25 candidates selected ',
paste(opt_sparse, collapse=', '), '.')
annt <- data.frame(xpos = -Inf, ypos = Inf, txt = opt_text,
hjustvar = 0, vjustvar = 0.5)
}
xMin <- c(o_df$Ability) %>% min()  %>% floor() -.25
m_df <- tibble(pLoc = seq(xMin, 3, .001)) %>%
mutate(pSuccess = exp(pLoc - i_df$iLogit)/(1+exp(pLoc - i_df$iLogit)),
lineLab = "Model\nProbability")
p <- ggplot() +
geom_point(data = o_df,
mapping = aes(x = Ability, y = prop, size = Count,
colour = Option), alpha = .8) +
geom_line(data = o_df,
mapping = aes(x = Ability, y = prop, colour = Option),
size = 1, alpha = .5) +
geom_line(data = m_df,
mapping = aes(x = pLoc, y = pSuccess,
colour = lineLab), size = 1.5, alpha = .5) +
scale_shape_discrete(name = "Ability\nGroup") +
labs(title = paste0("Category Characteristic Curves\n", "Item: ", i, " (",
i_df$iLab,")"),
subtitle = paste0("Weighted MNSQ = ", round(i_df$WeightedMNSQ,2)),
x = "Latent Trait (logit)", y = "Probability") +
scale_colour_brewer(type="qual", palette = 2) +
ggthemes::theme_tufte()
if (length(opt_sparse) > 0){
p + geom_text(data = annt,
aes(x=xpos,y=ypos, hjust=hjustvar,
vjust=vjustvar, label=txt))
} else {
p
}
if (length(opt_sparse) > 0){
opt_text <- str_c('Fewer than 25 candidates selected ',
paste(opt_sparse, collapse=', '), '.')
annt <- data.frame(xpos = -Inf, ypos = Inf, txt = opt_text,
hjustvar = 0, vjustvar = 1.5)
}
xMin <- c(o_df$Ability) %>% min()  %>% floor() -.25
m_df <- tibble(pLoc = seq(xMin, 3, .001)) %>%
mutate(pSuccess = exp(pLoc - i_df$iLogit)/(1+exp(pLoc - i_df$iLogit)),
lineLab = "Model\nProbability")
p <- ggplot() +
geom_point(data = o_df,
mapping = aes(x = Ability, y = prop, size = Count,
colour = Option), alpha = .8) +
geom_line(data = o_df,
mapping = aes(x = Ability, y = prop, colour = Option),
size = 1, alpha = .5) +
geom_line(data = m_df,
mapping = aes(x = pLoc, y = pSuccess,
colour = lineLab), size = 1.5, alpha = .5) +
scale_shape_discrete(name = "Ability\nGroup") +
labs(title = paste0("Category Characteristic Curves\n", "Item: ", i, " (",
i_df$iLab,")"),
subtitle = paste0("Weighted MNSQ = ", round(i_df$WeightedMNSQ,2)),
x = "Latent Trait (logit)", y = "Probability") +
scale_colour_brewer(type="qual", palette = 2) +
ggthemes::theme_tufte()
if (length(opt_sparse) > 0){
p + geom_text(data = annt,
aes(x=xpos,y=ypos, hjust=hjustvar,
vjust=vjustvar, label=txt))
} else {
p
}
if (length(opt_sparse) > 0){
opt_text <- str_c('Fewer than 25 candidates selected ',
paste(opt_sparse, collapse=', '), '.')
annt <- data.frame(xpos = -Inf, ypos = Inf, txt = opt_text,
hjustvar = 0, vjustvar = 2.5)
}
xMin <- c(o_df$Ability) %>% min()  %>% floor() -.25
m_df <- tibble(pLoc = seq(xMin, 3, .001)) %>%
mutate(pSuccess = exp(pLoc - i_df$iLogit)/(1+exp(pLoc - i_df$iLogit)),
lineLab = "Model\nProbability")
p <- ggplot() +
geom_point(data = o_df,
mapping = aes(x = Ability, y = prop, size = Count,
colour = Option), alpha = .8) +
geom_line(data = o_df,
mapping = aes(x = Ability, y = prop, colour = Option),
size = 1, alpha = .5) +
geom_line(data = m_df,
mapping = aes(x = pLoc, y = pSuccess,
colour = lineLab), size = 1.5, alpha = .5) +
scale_shape_discrete(name = "Ability\nGroup") +
labs(title = paste0("Category Characteristic Curves\n", "Item: ", i, " (",
i_df$iLab,")"),
subtitle = paste0("Weighted MNSQ = ", round(i_df$WeightedMNSQ,2)),
x = "Latent Trait (logit)", y = "Probability") +
scale_colour_brewer(type="qual", palette = 2) +
ggthemes::theme_tufte()
if (length(opt_sparse) > 0){
p + geom_text(data = annt,
aes(x=xpos,y=ypos, hjust=hjustvar,
vjust=vjustvar, label=txt))
} else {
p
}
if (length(opt_sparse) > 0){
opt_text <- str_c('Warning:\nFewer than 25 candidates selected ',
paste(opt_sparse, collapse=', '), '.')
annt <- data.frame(xpos = -Inf, ypos = Inf, txt = opt_text,
hjustvar = 0, vjustvar = 2.5)
}
xMin <- c(o_df$Ability) %>% min()  %>% floor() -.25
m_df <- tibble(pLoc = seq(xMin, 3, .001)) %>%
mutate(pSuccess = exp(pLoc - i_df$iLogit)/(1+exp(pLoc - i_df$iLogit)),
lineLab = "Model\nProbability")
p <- ggplot() +
geom_point(data = o_df,
mapping = aes(x = Ability, y = prop, size = Count,
colour = Option), alpha = .8) +
geom_line(data = o_df,
mapping = aes(x = Ability, y = prop, colour = Option),
size = 1, alpha = .5) +
geom_line(data = m_df,
mapping = aes(x = pLoc, y = pSuccess,
colour = lineLab), size = 1.5, alpha = .5) +
scale_shape_discrete(name = "Ability\nGroup") +
labs(title = paste0("Category Characteristic Curves\n", "Item: ", i, " (",
i_df$iLab,")"),
subtitle = paste0("Weighted MNSQ = ", round(i_df$WeightedMNSQ,2)),
x = "Latent Trait (logit)", y = "Probability") +
scale_colour_brewer(type="qual", palette = 2) +
ggthemes::theme_tufte()
if (length(opt_sparse) > 0){
p + geom_text(data = annt,
aes(x=xpos,y=ypos, hjust=hjustvar,
vjust=vjustvar, label=txt))
} else {
p
}
opt_sparse
if (length(opt_sparse) > 0){
opt_text <- str_c('Warning:\nFewer than 25 candidates selected any of ',
paste(opt_sparse, collapse=', '), '.')
annt <- data.frame(xpos = -Inf, ypos = Inf, txt = opt_text,
hjustvar = 0, vjustvar = 2.5)
}
xMin <- c(o_df$Ability) %>% min()  %>% floor() -.25
m_df <- tibble(pLoc = seq(xMin, 3, .001)) %>%
mutate(pSuccess = exp(pLoc - i_df$iLogit)/(1+exp(pLoc - i_df$iLogit)),
lineLab = "Model\nProbability")
p <- ggplot() +
geom_point(data = o_df,
mapping = aes(x = Ability, y = prop, size = Count,
colour = Option), alpha = .8) +
geom_line(data = o_df,
mapping = aes(x = Ability, y = prop, colour = Option),
size = 1, alpha = .5) +
geom_line(data = m_df,
mapping = aes(x = pLoc, y = pSuccess,
colour = lineLab), size = 1.5, alpha = .5) +
scale_shape_discrete(name = "Ability\nGroup") +
labs(title = paste0("Category Characteristic Curves\n", "Item: ", i, " (",
i_df$iLab,")"),
subtitle = paste0("Weighted MNSQ = ", round(i_df$WeightedMNSQ,2)),
x = "Latent Trait (logit)", y = "Probability") +
scale_colour_brewer(type="qual", palette = 2) +
ggthemes::theme_tufte()
if (length(opt_sparse) > 0){
p + geom_text(data = annt,
aes(x=xpos,y=ypos, hjust=hjustvar,
vjust=vjustvar, label=txt))
} else {
p
}
opt_sparse <- o_df %>%
filter(!(Option %in% c('M', 'R'))) %>%
group_by(Option) %>%
summarise(N=sum(Count)) %>%
filter(N < 25) %>%
pull(Option)
if (length(opt_sparse) > 0){
opt_text <- str_c('Warning:\nFewer than 25 candidates selected any of ',
paste(opt_sparse, collapse=', '), '.')
annt <- data.frame(xpos = -Inf, ypos = Inf, txt = opt_text,
hjustvar = 0, vjustvar = 2.5)
}
xMin <- c(o_df$Ability) %>% min()  %>% floor() -.25
m_df <- tibble(pLoc = seq(xMin, 3, .001)) %>%
mutate(pSuccess = exp(pLoc - i_df$iLogit)/(1+exp(pLoc - i_df$iLogit)),
lineLab = "Model\nProbability")
p <- ggplot() +
geom_point(data = o_df,
mapping = aes(x = Ability, y = prop, size = Count,
colour = Option), alpha = .8) +
geom_line(data = o_df,
mapping = aes(x = Ability, y = prop, colour = Option),
size = 1, alpha = .5) +
geom_line(data = m_df,
mapping = aes(x = pLoc, y = pSuccess,
colour = lineLab), size = 1.5, alpha = .5) +
scale_shape_discrete(name = "Ability\nGroup") +
labs(title = paste0("Category Characteristic Curves\n", "Item: ", i, " (",
i_df$iLab,")"),
subtitle = paste0("Weighted MNSQ = ", round(i_df$WeightedMNSQ,2)),
x = "Latent Trait (logit)", y = "Probability") +
scale_colour_brewer(type="qual", palette = 2) +
ggthemes::theme_tufte()
if (length(opt_sparse) > 0){
p + geom_text(data = annt,
aes(x=xpos,y=ypos, hjust=hjustvar,
vjust=vjustvar, label=txt))
} else {
p
}
opt_sparse <- o_df %>%
filter(!(Option %in% c('M', 'R'))) %>%
group_by(Option) %>%
summarise(N=sum(Count)) %>%
filter(N < 125) %>%
pull(Option)
if (length(opt_sparse) > 0){
opt_text <- str_c('Warning:\nFewer than 25 candidates selected ',
paste(opt_sparse, collapse='or '), '.')
annt <- data.frame(xpos = -Inf, ypos = Inf, txt = opt_text,
hjustvar = 0, vjustvar = 2.5)
}
xMin <- c(o_df$Ability) %>% min()  %>% floor() -.25
m_df <- tibble(pLoc = seq(xMin, 3, .001)) %>%
mutate(pSuccess = exp(pLoc - i_df$iLogit)/(1+exp(pLoc - i_df$iLogit)),
lineLab = "Model\nProbability")
p <- ggplot() +
geom_point(data = o_df,
mapping = aes(x = Ability, y = prop, size = Count,
colour = Option), alpha = .8) +
geom_line(data = o_df,
mapping = aes(x = Ability, y = prop, colour = Option),
size = 1, alpha = .5) +
geom_line(data = m_df,
mapping = aes(x = pLoc, y = pSuccess,
colour = lineLab), size = 1.5, alpha = .5) +
scale_shape_discrete(name = "Ability\nGroup") +
labs(title = paste0("Category Characteristic Curves\n", "Item: ", i, " (",
i_df$iLab,")"),
subtitle = paste0("Weighted MNSQ = ", round(i_df$WeightedMNSQ,2)),
x = "Latent Trait (logit)", y = "Probability") +
scale_colour_brewer(type="qual", palette = 2) +
ggthemes::theme_tufte()
if (length(opt_sparse) > 0){
p + geom_text(data = annt,
aes(x=xpos,y=ypos, hjust=hjustvar,
vjust=vjustvar, label=txt))
} else {
p
}
opt_sparse <- o_df %>%
filter(!(Option %in% c('M', 'R'))) %>%
group_by(Option) %>%
summarise(N=sum(Count)) %>%
filter(N < 125) %>%
pull(Option)
if (length(opt_sparse) > 0){
opt_text <- str_c('Warning:\nFewer than 25 candidates selected ',
paste(opt_sparse, collapse=' or '), '.')
annt <- data.frame(xpos = -Inf, ypos = Inf, txt = opt_text,
hjustvar = 0, vjustvar = 2.5)
}
xMin <- c(o_df$Ability) %>% min()  %>% floor() -.25
m_df <- tibble(pLoc = seq(xMin, 3, .001)) %>%
mutate(pSuccess = exp(pLoc - i_df$iLogit)/(1+exp(pLoc - i_df$iLogit)),
lineLab = "Model\nProbability")
p <- ggplot() +
geom_point(data = o_df,
mapping = aes(x = Ability, y = prop, size = Count,
colour = Option), alpha = .8) +
geom_line(data = o_df,
mapping = aes(x = Ability, y = prop, colour = Option),
size = 1, alpha = .5) +
geom_line(data = m_df,
mapping = aes(x = pLoc, y = pSuccess,
colour = lineLab), size = 1.5, alpha = .5) +
scale_shape_discrete(name = "Ability\nGroup") +
labs(title = paste0("Category Characteristic Curves\n", "Item: ", i, " (",
i_df$iLab,")"),
subtitle = paste0("Weighted MNSQ = ", round(i_df$WeightedMNSQ,2)),
x = "Latent Trait (logit)", y = "Probability") +
scale_colour_brewer(type="qual", palette = 2) +
ggthemes::theme_tufte()
if (length(opt_sparse) > 0){
p + geom_text(data = annt,
aes(x=xpos,y=ypos, hjust=hjustvar,
vjust=vjustvar, label=txt))
} else {
p
}
opt_sparse <- o_df %>%
filter(!(Option %in% c('M', 'R'))) %>%
group_by(Option) %>%
summarise(N=sum(Count)) %>%
filter(N < 25) %>%
pull(Option)
if (length(opt_sparse) > 0){
opt_text <- str_c('Warning:\nFewer than 25 candidates selected ',
paste(opt_sparse, collapse=' or '), '.')
annt <- data.frame(xpos = -Inf, ypos = Inf, txt = opt_text,
hjustvar = 0, vjustvar = 2.5)
}
xMin <- c(o_df$Ability) %>% min()  %>% floor() -.25
m_df <- tibble(pLoc = seq(xMin, 3, .001)) %>%
mutate(pSuccess = exp(pLoc - i_df$iLogit)/(1+exp(pLoc - i_df$iLogit)),
lineLab = "Model\nProbability")
p <- ggplot() +
geom_point(data = o_df,
mapping = aes(x = Ability, y = prop, size = Count,
colour = Option), alpha = .8) +
geom_line(data = o_df,
mapping = aes(x = Ability, y = prop, colour = Option),
size = 1, alpha = .5) +
geom_line(data = m_df,
mapping = aes(x = pLoc, y = pSuccess,
colour = lineLab), size = 1.5, alpha = .5) +
scale_shape_discrete(name = "Ability\nGroup") +
labs(title = paste0("Category Characteristic Curves\n", "Item: ", i, " (",
i_df$iLab,")"),
subtitle = paste0("Weighted MNSQ = ", round(i_df$WeightedMNSQ,2)),
x = "Latent Trait (logit)", y = "Probability") +
scale_colour_brewer(type="qual", palette = 2) +
ggthemes::theme_tufte()
if (length(opt_sparse) > 0){
p + geom_text(data = annt,
aes(x=xpos,y=ypos, hjust=hjustvar,
vjust=vjustvar, label=txt))
} else {
p
}
test='Writing'
cqs <- conquestr::ConQuestSys(here::here('output', paste0(test, ".CQS")))
devtools::document()
devtools::build()
R.version
devtools::document
devtools::document()
devtools::document()
devtools::build()
devtools::document()
devtools::build()
devtools::document()
devtools::build()
devtools::document()
devtools::build()
